version: "3.8"
services:
  minio:
    container_name: minio
    hostname: minio
    image: quay.io/minio/minio
    command: server  --console-address ":9001" /data/
    expose:
      - "9000"
      - "9001"
    networks:
      - s3
    environment:
      MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
      MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - ./Docker/minio:/data
  db:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "54320:5432"
    networks:
      - postgres

  pg_admin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - ./Docker/pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - postgres
  mlflow:
    build: ./Docker/mlflow_image/
    container_name: mlflow_server
    image: mlflow_server
    restart: always
    ports:
      - "5000:5000"
    networks:
      - postgres
      - s3
    env_file:
      - .env
    command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB} --default-artifact-root s3://${AWS_S3_BUCKET}/ --host 0.0.0.0

  nginx:
    image: nginx:1.19.2-alpine
    container_name: nginx
    hostname: nginx
    volumes:
      - ./Docker/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - s3
    depends_on:
      - minio
networks:
  s3:
    driver: bridge
  postgres:
    driver: bridge
volumes:
  postgres: